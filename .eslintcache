[{"D:\\code\\r\\mern-ecommerce\\client\\src\\index.js":"1","D:\\code\\r\\mern-ecommerce\\client\\src\\reportWebVitals.js":"2","D:\\code\\r\\mern-ecommerce\\client\\src\\App.js":"3","D:\\code\\r\\mern-ecommerce\\client\\src\\reducers\\index.js":"4","D:\\code\\r\\mern-ecommerce\\client\\src\\firebase.js":"5","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\Home.js":"6","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js":"7","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\Login.js":"8","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\Register.js":"10","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\user\\History.js":"11","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\user\\Wishlist.js":"12","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\user\\Password.js":"13","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js":"14","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.js":"15","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"16","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"17","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"18","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js":"19","D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\auth.js":"20","D:\\code\\r\\mern-ecommerce\\client\\src\\reducers\\userReducer.js":"21","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\routes\\UserRoute.js":"22","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"23","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\nav\\Header.js":"24","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\nav\\AdminNav.js":"25","D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\category.js":"26","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\nav\\UserNav.js":"27","D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\sub.js":"28","D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\product.js":"29","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"30","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\CategoryForm.js":"31","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js":"32","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\LocalSearch.js":"33","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\FileUpload.js":"34","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\AdminProductCard.js":"35","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js":"36","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"37","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"38","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\ProductCard.js":"39","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\Jumbotron.js":"40","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\LoadingCard.js":"41","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\home\\NewArrivals.js":"42","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\home\\BestSellers.js":"43","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\Product.js":"44","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\SingleProduct.js":"45","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\ProductListItems.js":"46"},{"size":879,"mtime":1606923709057,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1606893484964,"results":"49","hashOfConfig":"48"},{"size":3544,"mtime":1613468222743,"results":"50","hashOfConfig":"48"},{"size":189,"mtime":1606923602592,"results":"51","hashOfConfig":"48"},{"size":668,"mtime":1606918788066,"results":"52","hashOfConfig":"48"},{"size":2291,"mtime":1613462877906,"results":"53","hashOfConfig":"48"},{"size":1918,"mtime":1607573934353,"results":"54","hashOfConfig":"48"},{"size":5497,"mtime":1607574003491,"results":"55","hashOfConfig":"48"},{"size":3540,"mtime":1607573978142,"results":"56","hashOfConfig":"48"},{"size":1784,"mtime":1607573816928,"results":"57","hashOfConfig":"48"},{"size":344,"mtime":1607566298371,"results":"58","hashOfConfig":"48"},{"size":387,"mtime":1607568291297,"results":"59","hashOfConfig":"48"},{"size":2128,"mtime":1607568791014,"results":"60","hashOfConfig":"48"},{"size":425,"mtime":1613376390477,"results":"61","hashOfConfig":"48"},{"size":5268,"mtime":1608131402884,"results":"62","hashOfConfig":"48"},{"size":2813,"mtime":1608126460877,"results":"63","hashOfConfig":"48"},{"size":4359,"mtime":1608128312494,"results":"64","hashOfConfig":"48"},{"size":3431,"mtime":1608131770192,"results":"65","hashOfConfig":"48"},{"size":3350,"mtime":1613457606787,"results":"66","hashOfConfig":"48"},{"size":802,"mtime":1607572220200,"results":"67","hashOfConfig":"48"},{"size":268,"mtime":1606923592800,"results":"68","hashOfConfig":"48"},{"size":388,"mtime":1607573737426,"results":"69","hashOfConfig":"48"},{"size":922,"mtime":1607573759395,"results":"70","hashOfConfig":"48"},{"size":2432,"mtime":1607962120497,"results":"71","hashOfConfig":"48"},{"size":1192,"mtime":1613453494014,"results":"72","hashOfConfig":"48"},{"size":999,"mtime":1613037008638,"results":"73","hashOfConfig":"48"},{"size":619,"mtime":1607515108676,"results":"74","hashOfConfig":"48"},{"size":803,"mtime":1608129401163,"results":"75","hashOfConfig":"48"},{"size":1097,"mtime":1613466778212,"results":"76","hashOfConfig":"48"},{"size":732,"mtime":1607574035731,"results":"77","hashOfConfig":"48"},{"size":601,"mtime":1608126320822,"results":"78","hashOfConfig":"48"},{"size":3815,"mtime":1613457734240,"results":"79","hashOfConfig":"48"},{"size":510,"mtime":1608128228207,"results":"80","hashOfConfig":"48"},{"size":4257,"mtime":1613455939611,"results":"81","hashOfConfig":"48"},{"size":1229,"mtime":1613379461474,"results":"82","hashOfConfig":"48"},{"size":2645,"mtime":1613378576603,"results":"83","hashOfConfig":"48"},{"size":5671,"mtime":1613456792207,"results":"84","hashOfConfig":"48"},{"size":5016,"mtime":1613454777337,"results":"85","hashOfConfig":"48"},{"size":1196,"mtime":1613459058391,"results":"86","hashOfConfig":"48"},{"size":281,"mtime":1613459691269,"results":"87","hashOfConfig":"48"},{"size":515,"mtime":1613460376769,"results":"88","hashOfConfig":"48"},{"size":1929,"mtime":1613466438019,"results":"89","hashOfConfig":"48"},{"size":1922,"mtime":1613467522587,"results":"90","hashOfConfig":"48"},{"size":936,"mtime":1613792995844,"results":"91","hashOfConfig":"48"},{"size":2149,"mtime":1613792494161,"results":"92","hashOfConfig":"48"},{"size":2728,"mtime":1613791527833,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"ywdis5",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\r\\mern-ecommerce\\client\\src\\index.js",[],["199","200"],"D:\\code\\r\\mern-ecommerce\\client\\src\\reportWebVitals.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\App.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\reducers\\index.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\firebase.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\Home.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\Login.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\auth\\Register.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\user\\History.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\user\\Wishlist.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\user\\Password.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.js",["201"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategories } from \"../../../functions/category\";\r\nimport { createSub, getSub, removeSub, getSubs } from \"../../../functions/sub\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\r\n\r\nconst SubCreate = () => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [subs, setSubs] = useState([]);\r\n    // step 1\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n        loadSubs();\r\n    }, []);\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setCategories(c.data));\r\n\r\n    const loadSubs = () => getSubs().then((s) => setSubs(s.data));\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(name);\r\n        setLoading(true);\r\n        createSub({ name, parent: category }, user.token)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setLoading(false);\r\n                setName(\"\");\r\n                toast.success(`\"${res.data.name}\" is created`);\r\n                loadSubs();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n    const handleRemove = async (slug) => {\r\n        // let answer = window.confirm(\"Delete?\");\r\n        // console.log(answer, slug);\r\n        if (window.confirm(\"Delete?\")) {\r\n            setLoading(true);\r\n            removeSub(slug, user.token)\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    toast.error(`${res.data.name} deleted`);\r\n                    loadSubs();\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.status === 400) {\r\n                        setLoading(false);\r\n                        toast.error(err.response.data);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    // step 4\r\n    const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading..</h4>\r\n                    ) : (\r\n                            <h4>Create sub category</h4>\r\n                        )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            <option>Please select</option>\r\n                            {categories.length > 0 &&\r\n                                categories.map((c) => (\r\n                                    <option key={c._id} value={c._id}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* {JSON.stringify(category)} */}\r\n\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n\r\n                    {/* step 2 and step 3 */}\r\n                    <LocalSearch keyword={keyword} setKeyword={setKeyword} />\r\n\r\n                    {/* step 5 */}\r\n                    {subs.filter(searched(keyword)).map((s) => (\r\n                        <div className=\"alert alert-secondary\" key={s._id}>\r\n                            {s.name}\r\n                            <span\r\n                                onClick={() => handleRemove(s.slug)}\r\n                                className=\"btn btn-sm float-right\"\r\n                            >\r\n                                <DeleteOutlined className=\"text-danger\" />\r\n                            </span>\r\n                            <Link to={`/admin/sub/${s.slug}`}>\r\n                                <span className=\"btn btn-sm float-right\">\r\n                                    <EditOutlined className=\"text-warning\" />\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubCreate;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["202"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategory, updateCategory } from \"../../../functions/category\";\r\nimport CategoryForm from './../../../components/forms/CategoryForm';\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = () =>\r\n        getCategory(match.params.slug).then((c) => setName(c.data.name));\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(name);\r\n        setLoading(true);\r\n        updateCategory(match.params.slug, { name }, user.token)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setLoading(false);\r\n                setName(\"\");\r\n                toast.success(`\"${res.data.name}\" is updated`);\r\n                history.push(\"/admin/category\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n    /*     const categoryForm = () => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        value={name}\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <button className=\"btn btn-outline-primary\">Save</button>\r\n                </div>\r\n            </form>\r\n        ); */\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading..</h4>\r\n                    ) : (\r\n                            <h4>Update category</h4>\r\n                        )}\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryUpdate;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["203","204","205","206","207"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategories } from \"../../../functions/category\";\r\nimport { updateSub, getSub } from \"../../../functions/sub\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\r\n\r\nconst SubUpdate = ({ match, history }) => {\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [parent, setParent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n        loadSub();\r\n    }, []);\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setCategories(c.data));\r\n\r\n    const loadSub = () =>\r\n        getSub(match.params.slug).then((s) => {\r\n            setName(s.data.name);\r\n            setParent(s.data.parent);\r\n        });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(name);\r\n        setLoading(true);\r\n        updateSub(match.params.slug, { name, parent }, user.token)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setLoading(false);\r\n                setName(\"\");\r\n                toast.success(`\"${res.data.name}\" is updated`);\r\n                history.push(\"/admin/sub\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading..</h4>\r\n                    ) : (\r\n                            <h4>Update sub category</h4>\r\n                        )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setParent(e.target.value)}\r\n                        >\r\n                            <option>Please select</option>\r\n                            {categories.length > 0 &&\r\n                                categories.map((c) => (\r\n                                    <option key={c._id} value={c._id} selected={c._id === parent}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubUpdate;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js",["208"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { createProduct } from \"../../../functions/product\";\r\nimport ProductCreateForm from \"../../../components/forms/ProductCreateForm\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  descriptioin: \"\",\r\n  price: \"\",\r\n  categories: [],\r\n  category: \"\",\r\n  subs: [],\r\n  shipping: \"\",\r\n  quantity: \"\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\", \"Green\"],\r\n  brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\r\n  color: \"\",\r\n  brand: \"\",\r\n};\r\n\r\nconst ProductCreate = () => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [showSub, setShowSub] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // redux\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setValues({ ...values, categories: c.data }));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(`\"${res.data.title}\" is created`);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // if (err.response.status === 400) toast.error(err.response.data);\r\n        toast.error(err.response.data.err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n    // console.log(e.target.name, \" ----- \", e.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"CLICKED CATEGORY\", e.target.value);\r\n    setValues({ ...values, subs: [], category: e.target.value });\r\n    getCategorySubs(e.target.value).then((res) => {\r\n      console.log(\"SUB OPTIONS ON CATEGORY CLICK\", res);\r\n      setSubOptions(res.data);\r\n    });\r\n    setShowSub(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-10\">\r\n          {loading ? (\r\n            <LoadingOutlined className=\"text-danger h1\" />\r\n          ) : (\r\n              <h4>Product create</h4>\r\n            )}\r\n          <hr />\r\n\r\n          {/* {JSON.stringify(values.images)} */}\r\n          <div className=\"p-3\">\r\n            <FileUpload\r\n              values={values}\r\n              setValues={setValues}\r\n              setLoading={setLoading} />\r\n          </div>\r\n          <ProductCreateForm\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            setValues={setValues}\r\n            values={values}\r\n            handleCategoryChange={handleCategoryChange}\r\n            subOptions={subOptions}\r\n            showSub={showSub}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\auth.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\reducers\\userReducer.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\routes\\UserRoute.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\nav\\Header.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\nav\\AdminNav.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\category.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\nav\\UserNav.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\sub.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\functions\\product.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\CategoryForm.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js",["209","210","211","212","213"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductCreateForm = (\r\n  {\r\n    handleSubmit,\r\n    handleChange,\r\n    setValues,\r\n    values,\r\n    handleCategoryChange,\r\n    subOptions,\r\n    showSub,\r\n  }) => {\r\n  // destructure\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          className=\"form-control\"\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Shipping</label>\r\n        <select\r\n          name=\"shipping\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        >\r\n          <option>Please select</option>\r\n          <option value=\"No\">No</option>\r\n          <option value=\"Yes\">Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Quantity</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          className=\"form-control\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Color</label>\r\n        <select name=\"color\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {colors.map((c) => (\r\n            <option key={c} value={c}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Brand</label>\r\n        <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\r\n          <option>Please select</option>\r\n          {brands.map((b) => (\r\n            <option key={b} value={b}>\r\n              {b}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Category</label>\r\n        <select\r\n          name=\"category\"\r\n          className=\"form-control\"\r\n          onChange={handleCategoryChange}\r\n        >\r\n          <option>Please select</option>\r\n          {categories.length > 0 &&\r\n            categories.map((c) => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      {showSub && (\r\n        <div>\r\n          <label>Sub Categories</label>\r\n          <Select\r\n            mode=\"multiple\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Please select\"\r\n            value={subs}\r\n            onChange={(value) => setValues({ ...values, subs: value })}\r\n          >\r\n            {subOptions.length &&\r\n              subOptions.map((s) => (\r\n                <Option key={s._id} value={s._id}>\r\n                  {s.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      )}\r\n\r\n      <br />\r\n      <button className=\"btn btn-outline-info\">Save</button>\r\n    </form>\r\n\r\n  );\r\n};\r\n\r\nexport default ProductCreateForm;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\LocalSearch.js",["214","215"],"import React from 'react';\r\n\r\nconst LocalSearch = ({ keyword, setKeyword }) => {\r\n    {/* step3 */ }\r\n    const handleSearchChange = (e) => {\r\n        e.preventDefault();\r\n        setKeyword(e.target.value.toLowerCase());\r\n    };\r\n    {/* step2 */ }\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            placeholder=\"Filter\"\r\n            value={keyword}\r\n            onChange={handleSearchChange}\r\n            className=\"form-control mb-4\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default LocalSearch;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\FileUpload.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\AdminProductCard.js",["216"],"import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport NoImg from \"../../images/noimg.jpg\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n    // destructure\r\n    const { title, description, images, slug } = product;\r\n\r\n    return (\r\n        <Card\r\n            cover={\r\n                <img\r\n                    src={images && images.length ? images[0].url : NoImg}\r\n                    style={{ height: \"150px\", objectFit: \"cover\" }}\r\n                    className=\"p-1\"\r\n                />\r\n            }\r\n            actions={[\r\n                <Link to={`/admin/product/${slug}`}>\r\n                    <EditOutlined className=\"text-warning\" />\r\n                </Link>,\r\n                <DeleteOutlined\r\n                    className=\"text-danger\"\r\n                    onClick={() => handleRemove(slug)}\r\n                />,\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={title}\r\n                description={`${description && description.substring(0, 40)}...`}\r\n            />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default AdminProductCard;","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["217","218"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProduct, updateProduct } from \"../../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    subs: [],\r\n    shipping: \"\",\r\n    quantity: \"\",\r\n    images: [],\r\n    colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\", \"Green\"],\r\n    brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\r\n    color: \"\",\r\n    brand: \"\",\r\n};\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n    // state\r\n    const [values, setValues] = useState(initialState);\r\n    const [categories, setCategories] = useState([]);\r\n    const [subOptions, setSubOptions] = useState([]);\r\n    const [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    // router\r\n    const { slug } = match.params;\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadProduct = () => {\r\n        getProduct(slug).then((p) => {\r\n            // console.log(\"single product\", p);\r\n            // 1 load single proudct\r\n            setValues({ ...values, ...p.data });\r\n            // 2 load single product category subs\r\n            getCategorySubs(p.data.category._id).then((res) => {\r\n                setSubOptions(res.data); // on first load, show default subs\r\n            });\r\n            // 3 prepare array of sub ids to show as default sub values in antd Select\r\n            let arr = [];\r\n            p.data.subs.map((s) => {\r\n                arr.push(s._id);\r\n            });\r\n            console.log(\"ARR\", arr);\r\n            setArrayOfSubs((prev) => arr); // required for ant design select to work\r\n        });\r\n    };\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => {\r\n            console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\r\n            setCategories(c.data);\r\n        });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        values.subs = arrayOfSubs;\r\n        values.category = selectedCategory ? selectedCategory : values.category;\r\n\r\n        updateProduct(slug, values, user.token)\r\n            .then((res) => {\r\n                setLoading(false);\r\n                toast.success(`\"${res.data.title}\" is updated`);\r\n                history.push(\"/admin/products\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                toast.error(err.response.data.err);\r\n            });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n        // console.log(e.target.name, \" ----- \", e.target.value);\r\n    };\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"CLICKED CATEGORY\", e.target.value);\r\n        //setValues({ ...values, subs: [], category: e.target.value });\r\n        setValues({ ...values, subs: [] });\r\n\r\n        setSelectedCategory(e.target.value);\r\n\r\n        getCategorySubs(e.target.value).then((res) => {\r\n            console.log(\"SUB OPTIONS ON CATEGORY CLICK\", res);\r\n            setSubOptions(res.data);\r\n        });\r\n\r\n        console.log(\"EXISTING CATEGORY values.category\", values.category);\r\n        // if user clicks back to the original category\r\n        // show its sub categories in default\r\n        if (values.category._id === e.target.value) {\r\n            loadProduct();\r\n        }\r\n        // clear old sub category ids\r\n        setArrayOfSubs([]);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n\r\n                <div className=\"col-md-10\">\r\n                    {loading ? (\r\n                        <LoadingOutlined className=\"text-danger h1\" />\r\n                    ) : (\r\n                            <h4>Product update</h4>\r\n                        )}\r\n                    {/* {JSON.stringify(values)} */}\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n                    <br />\r\n                    <ProductUpdateForm\r\n                        handleSubmit={handleSubmit}\r\n                        handleChange={handleChange}\r\n                        setValues={setValues}\r\n                        values={values}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        categories={categories}\r\n                        subOptions={subOptions}\r\n                        arrayOfSubs={arrayOfSubs}\r\n                        setArrayOfSubs={setArrayOfSubs}\r\n                        selectedCategory={selectedCategory}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["219","220"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductUpdateForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    setValues,\r\n    values,\r\n    handleCategoryChange,\r\n    categories,\r\n    subOptions,\r\n    arrayOfSubs,\r\n    setArrayOfSubs,\r\n    selectedCategory,\r\n}) => {\r\n    // destructure\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        category,\r\n        subs,\r\n        shipping,\r\n        quantity,\r\n        images,\r\n        colors,\r\n        brands,\r\n        color,\r\n        brand,\r\n    } = values;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    className=\"form-control\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    value={description}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    className=\"form-control\"\r\n                    value={price}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select\r\n                    value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\r\n                    name=\"shipping\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"No\">No</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    className=\"form-control\"\r\n                    value={quantity}\r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select\r\n                    value={color}\r\n                    name=\"color\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {colors.map((c) => (\r\n                        <option key={c} value={c}>\r\n                            {c}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Brand</label>\r\n                <select\r\n                    value={brand}\r\n                    name=\"brand\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {brands.map((b) => (\r\n                        <option key={b} value={b}>\r\n                            {b}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    name=\"category\"\r\n                    className=\"form-control\"\r\n                    onChange={handleCategoryChange}\r\n                    value={selectedCategory ? selectedCategory : category._id}\r\n                >\r\n                    {categories.length > 0 &&\r\n                        categories.map((c) => (\r\n                            <option key={c._id} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Sub Categories</label>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Please select\"\r\n                    value={arrayOfSubs}\r\n                    onChange={(value) => setArrayOfSubs(value)}\r\n                >\r\n                    {subOptions.length &&\r\n                        subOptions.map((s) => (\r\n                            <Option key={s._id} value={s._id}>\r\n                                {s.name}\r\n                            </Option>\r\n                        ))}\r\n                </Select>\r\n            </div>\r\n\r\n            <br />\r\n            <button className=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProductUpdateForm;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\ProductCard.js",["221"],"import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport NoImg from \"../../images/noimg.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProductCard = ({ product }) => {\r\n    // destructure\r\n    const { images, title, description, slug } = product;\r\n    return (\r\n        <Card\r\n            cover={\r\n                <img\r\n                    src={images && images.length ? images[0].url : NoImg}\r\n                    style={{ height: \"150px\", objectFit: \"cover\" }}\r\n                    className=\"p-1\"\r\n                />\r\n            }\r\n            actions={[\r\n                <Link to={`/product/${slug}`}>\r\n                    <EyeOutlined className=\"text-warning\" /> <br /> View Product\r\n                </Link>,\r\n                <>\r\n                    <ShoppingCartOutlined className=\"text-danger\" /> <br /> Add to Cart\r\n                </>,\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={title}\r\n                description={`${description && description.substring(0, 40)}...`}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\Jumbotron.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\LoadingCard.js",[],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\home\\NewArrivals.js",["222"],"import React, { useEffect, useState } from \"react\";\r\nimport { getProducts, getProductsCount } from \"../../functions/product\";\r\nimport ProductCard from \"../cards/ProductCard\";\r\nimport LoadingCard from \"../cards/LoadingCard\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst NewArrivals = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        loadAllProducts();\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        getProductsCount().then((res) => setProductsCount(res.data));\r\n    }, []);\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true);\r\n        // sort, order, limit\r\n        getProducts(\"createdAt\", \"desc\", page).then((res) => {\r\n            setProducts(res.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {loading ? (\r\n                    <LoadingCard count={3} />\r\n                ) : (\r\n                        <div className=\"row\">\r\n                            {products.map((product) => (\r\n                                <div key={product._id} className=\"col-md-4\">\r\n                                    <ProductCard product={product} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n                    <Pagination\r\n                        current={page}\r\n                        total={(productsCount / 3) * 10}\r\n                        onChange={(value) => setPage(value)}\r\n                    />\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewArrivals;\r\n","D:\\code\\r\\mern-ecommerce\\client\\src\\components\\home\\BestSellers.js",["223"],"import React, { useEffect, useState } from \"react\";\r\nimport { getProducts, getProductsCount } from \"../../functions/product\";\r\nimport ProductCard from \"../cards/ProductCard\";\r\nimport LoadingCard from \"../cards/LoadingCard\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst BestSellers = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        loadAllProducts();\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        getProductsCount().then((res) => setProductsCount(res.data));\r\n    }, []);\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true);\r\n        // sort, order, limit\r\n        getProducts(\"sold\", \"desc\", page).then((res) => {\r\n            setProducts(res.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {loading ? (\r\n                    <LoadingCard count={3} />\r\n                ) : (\r\n                        <div className=\"row\">\r\n                            {products.map((product) => (\r\n                                <div key={product._id} className=\"col-md-4\">\r\n                                    <ProductCard product={product} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n                    <Pagination\r\n                        current={page}\r\n                        total={(productsCount / 3) * 10}\r\n                        onChange={(value) => setPage(value)}\r\n                    />\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BestSellers;","D:\\code\\r\\mern-ecommerce\\client\\src\\pages\\Product.js",["224"],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\SingleProduct.js",["225","226","227"],"D:\\code\\r\\mern-ecommerce\\client\\src\\components\\cards\\ProductListItems.js",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":6,"column":21,"nodeType":"234","messageId":"235","endLine":6,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":16,"column":8,"nodeType":"238","endLine":16,"endColumn":10,"suggestions":"239"},{"ruleId":"232","severity":1,"message":"240","line":7,"column":10,"nodeType":"234","messageId":"235","endLine":7,"endColumn":14},{"ruleId":"232","severity":1,"message":"241","line":8,"column":10,"nodeType":"234","messageId":"235","endLine":8,"endColumn":22},{"ruleId":"232","severity":1,"message":"242","line":8,"column":24,"nodeType":"234","messageId":"235","endLine":8,"endColumn":38},{"ruleId":"232","severity":1,"message":"243","line":10,"column":8,"nodeType":"234","messageId":"235","endLine":10,"endColumn":19},{"ruleId":"236","severity":1,"message":"244","line":23,"column":8,"nodeType":"238","endLine":23,"endColumn":10,"suggestions":"245"},{"ruleId":"236","severity":1,"message":"246","line":38,"column":6,"nodeType":"238","endLine":38,"endColumn":8,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"248","line":22,"column":5,"nodeType":"234","messageId":"235","endLine":22,"endColumn":13},{"ruleId":"232","severity":1,"message":"249","line":24,"column":5,"nodeType":"234","messageId":"235","endLine":24,"endColumn":13},{"ruleId":"232","severity":1,"message":"250","line":26,"column":5,"nodeType":"234","messageId":"235","endLine":26,"endColumn":11},{"ruleId":"232","severity":1,"message":"251","line":29,"column":5,"nodeType":"234","messageId":"235","endLine":29,"endColumn":10},{"ruleId":"232","severity":1,"message":"252","line":30,"column":5,"nodeType":"234","messageId":"235","endLine":30,"endColumn":10},{"ruleId":"253","severity":1,"message":"254","line":4,"column":5,"nodeType":"255","messageId":"256","endLine":4,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":9,"column":5,"nodeType":"255","messageId":"256","endLine":9,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":16,"column":17,"nodeType":"259","endLine":20,"endColumn":19},{"ruleId":"236","severity":1,"message":"260","line":42,"column":8,"nodeType":"238","endLine":42,"endColumn":10,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":55,"column":33,"nodeType":"264","messageId":"265","endLine":55,"endColumn":35},{"ruleId":"232","severity":1,"message":"266","line":24,"column":9,"nodeType":"234","messageId":"235","endLine":24,"endColumn":13},{"ruleId":"232","severity":1,"message":"250","line":27,"column":9,"nodeType":"234","messageId":"235","endLine":27,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":15,"column":17,"nodeType":"259","endLine":19,"endColumn":19},{"ruleId":"236","severity":1,"message":"267","line":15,"column":8,"nodeType":"238","endLine":15,"endColumn":14,"suggestions":"268"},{"ruleId":"236","severity":1,"message":"267","line":15,"column":8,"nodeType":"238","endLine":15,"endColumn":14,"suggestions":"269"},{"ruleId":"236","severity":1,"message":"270","line":12,"column":8,"nodeType":"238","endLine":12,"endColumn":14,"suggestions":"271"},{"ruleId":"232","severity":1,"message":"272","line":14,"column":41,"nodeType":"234","messageId":"235","endLine":14,"endColumn":45},{"ruleId":"257","severity":1,"message":"258","line":21,"column":54,"nodeType":"259","endLine":21,"endColumn":91},{"ruleId":"257","severity":1,"message":"258","line":24,"column":38,"nodeType":"259","endLine":24,"endColumn":85},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'getSub' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["275"],"'Link' is defined but never used.","'EditOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'LocalSearch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["276"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["277"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["278"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'subs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["279"],["280"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["281"],"'slug' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [loadCategory]",{"range":"295","text":"296"},"Update the dependencies array to be: [loadSub]",{"range":"297","text":"298"},"Update the dependencies array to be: [loadCategories]",{"range":"299","text":"300"},"Update the dependencies array to be: [loadProduct]",{"range":"301","text":"302"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"303","text":"304"},{"range":"305","text":"304"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"306","text":"307"},[610,612],"[loadCategory]",[949,951],"[loadSub]",[1241,1243],"[loadCategories]",[1497,1499],"[loadProduct]",[557,563],"[loadAllProducts, page]",[557,563],[354,360],"[loadSingleProduct, slug]"]